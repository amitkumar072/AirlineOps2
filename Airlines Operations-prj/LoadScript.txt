///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$#,##0.00;($#,##0.00)';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='M/D/YYYY';
SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT';
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';

SET vLoadMainData= 'Y';
///$tab Includes
$(Include=tracerowcount.qvs);
$(Include=config.qvs);

///$tab Mapping
Map_Manufacturer_Country:
MAPPING LOAD Company, 
             Country
FROM
[$(vFolderSourceData)CSVs\Aircraft_Manufacturers.csv]
(txt, codepage is 1252, embedded labels, delimiter is ';', msq);

Map_Table_Comments:
MAPPING LOAD TableName, 
             Comment
FROM
[$(vFolderSourceData)Excel\Comments.xls]
(biff, embedded labels, table is Tables$);

Map_Field_Comments:
MAPPING LOAD FieldName, 
             Comment
FROM
[$(vFolderSourceData)Excel\Comments.xls]
(biff, embedded labels, table is Fields$);
///$tab Comments
COMMENT TABLES USING Map_Table_Comments;
COMMENT FIELDS USING Map_Field_Comments;
///$tab Aircrafts
//=====================================================================[Aircraft Types]==================================================================================//

        [Aircraft Types]:
        LOAD
            AC_TYPEID                                               as [%Aircraft Type ID], 
            AC_GROUP                                                as [%Aircraft Group Type], 
            SSD_NAME                                                as [Aircraft Name], 
            MANUFACTURER                                            as [Aircraft Manufacturer], 
            ApplyMap('Map_Manufacturer_Country',
             MANUFACTURER, 'Unknown')                               as [Aircraft Manufacturer Country],
            LONG_NAME                                               as [Aircraft Name Full], 
            SHORT_NAME                                              as [Aircraft Abbreviated], 
            BEGIN_DATE                                              as [Aircraft Begin Date], 
            END_DATE                                                as [Aircraft End Date],
            If(Year(BEGIN_DATE) < 1990, 'Classic' , 'Current' )     as [Aircraft Age Classification]
       FROM
       [$(vFolderSourceData)CSVs\Aircraft_Base_File.csv]
       (txt, codepage is 1252, embedded labels, delimiter is ';', msq);
//        Where Exists([%Aircraft Type ID], AC_TYPEID);
       //CALL TraceRowCount('Aircraft Types');

//[Aircraft Groups]:
       LEFT JOIN ([Aircraft Types])
       LOAD [Aircraft Group ID]                                     as [%Aircraft Group Type], 
            [Aircraft Engine Type], 
            [Aircraft Number Of Engines]
       FROM
       [$(vFolderSourceData)CSVs\Aircraft_Group.csv]
       (txt, codepage is 1252, embedded labels, delimiter is ';', msq);
       //CALL TraceRowCount('Aircraft Types');
       DROP FIELD [%Aircraft Group Type] FROM [Aircraft Types];
//[Aircraft Types 2010]:
Concatenate ([Aircraft Types])
LOAD AC_TYPEID as [%Aircraft Type ID], 
     SubField(AC_GROUPNAME,',',1) as [Aircraft Engine Type],
     SubField(AC_GROUPNAME,',',2) as [Aircraft Number Of Engines],
     SSD_NAME as [Aircraft Name], 
     MANUFACTURER as [Aircraft Manufacturer], 
     ApplyMap('Map_Manufacturer_Country', MANUFACTURER, 'Unknown') as [Aircraft Manufacturer Country],
     LONG_NAME as [Aircraft Name Full], 
     SHORT_NAME as [Aircraft Abbreviated], 
     BEGIN_DATE as [Aircraft Begin Date], 
     END_DATE as [Aircraft End Date],
     'Current' as [Aircraft Age Classification]
FROM
[$(vFolderSourceData)CSVs\Aircraft_2010_Update.csv]
(txt, codepage is 1252, embedded labels, delimiter is ';', msq);
//Where Exists([%Aircraft Type ID], AC_TYPEID);


STORE [Aircraft Types] INTO 'D:\QlikView Development\Airline Operations\Data Files\QVDs\AircraftTypesTransformed.qvd' (qvd) ;




///$tab Main Data
IF '$(vLoadMainData)' = 'Y' THEN
[Main Data]:
LOAD [%Airline ID], 
     [%Carrier Group ID], 
     [%Unique Carrier Code], 
     [%Unique Carrier Entity Code], 
     [%Region Code], 
     [%Origin Airport ID], 
     [%Origin Airport Sequence ID], 
     [%Origin Airport Market ID], 
     [%Origin World Area Code], 
     [%Destination Airport ID], 
     [%Destination Airport Sequence ID], 
     [%Destination Airport Market ID], 
     [%Destination World Area Code], 
     [%Aircraft Group ID], 
     [%Aircraft Type ID], 
     [%Aircraft Configuration ID], 
     [%Distance Group ID], 
     [%Service Class ID], 
     [%Datasource ID], 
     [# Departures Scheduled], 
     [# Departures Performed], 
     [# Payload], 
     Distance, 
     [# Available Seats], 
     [# Transported Passengers], 
     [# Transported Freight], 
     [# Transported Mail], 
     [# Ramp-To-Ramp Time], 
     [# Air Time], 
     [Unique Carrier], 
     [Carrier Code], 
     [Carrier Name], 
     [Origin Airport Code], 
     [Origin City], 
     [Origin State Code], 
     [Origin State FIPS], 
     [Origin State], 
     [Origin Country Code], 
     [Origin Country], 
     [Destination Airport Code], 
     [Destination City], 
     [Destination State Code], 
     [Destination State FIPS], 
     [Destination State], 
     [Destination Country Code], 
     [Destination Country], 
//     Year, 
     Period, 
//     Quarter, 
//     [Month (#)], 
//     Month,
     Period
     & '|' & [%Airline ID]
     & '|' & [%Unique Carrier Code]
     & '|' & [%Carrier Group ID] as [%Key Field], 
     [From - To Airport Code], 
     [From - To Airport ID], 
     [From - To City], 
     [From - To State Code], 
     [From - To State]
FROM
[$(vFolderSourceData)QVDs\Flight Data.qvd]
(qvd);

Temp_Aircraft_Type_Dim:
RIGHT KEEP ([Aircraft Types])
LOAD DISTINCT
[%Aircraft Type ID]
RESIDENT [Main Data] ;
DROP TABLE Temp_Aircraft_Type_Dim;
END IF
///$tab Employment Data
[Employment Statistics]:
LOAD 
     [%Airline ID],
     [%Unique Carrier Code],
     [%Carrier Group ID], 
     [# Full Time Employees], 
     [# Part Time Employees], 
     [# Total Employees], 
     [# Equivalent FTEs], 
     [Unique Carrier], 
     [Carrier Code], 
     [Carrier Name],
     Period, 
//     Year,  
//     [Month (#)], 
//     Month,
     Period
     & '|' & [%Airline ID]
     & '|' & [%Unique Carrier Code]
     & '|' & [%Carrier Group ID] as [%Key Field]
FROM
[..\Data Files\QVDs\T_F41SCHEDULE_P1A_EMP.qvd]
(qvd);

///$tab Calenders
// --- Select the lowest and highest per iods
// from the Fl ights fact table.

Temp_Calendar_Range:
LOAD
Num(Date#(Min(Period) , 'YYYYMM'))as MinDate,
Num(Date#(Max(Period) , 'YYYYMM'))as MaxDate
RESIDENT [Main Data];

// --- Assign the star t and end dates to var iables
LET vMinDate = Peek( 'MinDate' , 0, 'Temp_Calendar_Range' ) ;
LET vMaxDate = Peek( 'MaxDate' , 0, 'Temp_Calendar_Range' ) ;
DROP TABLE Temp_Calendar_Range; // Cleanup

[Master Calendar]:
LOAD DISTINCT
Year(Temp_Date) * 100 + Month(Temp_Date) as [Period] ,
Year(Temp_Date) as [Year] ,
Month(Temp_Date) as [Month] ,
Date(Temp_Date, 'YYYY-MM' ) as [Year - Month],
'Q' & Ceil(Month(Temp_Date)/ 3) as [Quarter];
LOAD DISTINCT
MonthStart ($(vMinDate) + IterNo() - 1) as Temp_Date
AUTOGENERATE (1)
WHILE $(vMinDate) + IterNo() - 1 <= $(vMaxDate);
// --- Remove the temporary var iables
LET vMinDate = Null();
LET vMaxDate = Null();
///$tab Link Tables
[Link Table]:
Load Distinct
[%Key Field],
[%Key Field] as [%TEMP Key Field] ,
//Year ,
Period,
//[Month (#)],
//Month,
//Quarter ,
[%Airline ID] ,
[%Unique Carrier Code] ,
[%Carrier Group ID] ,
[Unique Carrier] ,
[Carrier Code] ,
[Carrier Name]
Resident [Main Data] ;
Concatenate ([Link Table])
Load Distinct
[%Key Field] ,
//Year ,
Period,
//[Month (#)] ,
//Month,
//'Q' & Ceil ([Month (#)]/3, 1) as Quarter,
[%Airline ID] ,
[%Unique Carrier Code] ,
[%Carrier Group ID] ,
[Unique Carrier] ,
[Carrier Code] ,
[Carrier Name]
Resident [Employment Statistics]
Where Not Exists([%TEMP Key Field] , [%Key Field]);
Drop Field [%TEMP Key Field];
Drop Fields 
//Year,
Period,
//[Month (#)] ,
//Month,
[%Airline ID] ,
[%Unique Carrier Code] ,
[%Carrier Group ID] ,
[Unique Carrier] ,
[Carrier Code] ,
[Carrier Name] 
From [Employment Statistics];
Drop Fields 
//            Year,
            Period,
//            [Month (#)],
//             Month,
//            Quarter,
           [%Airline ID] ,
           [%Unique Carrier Code],
           [%Carrier Group ID],
           [Unique Carrier],
           [Carrier Code],
           [Carrier Name] 
From [Main Data] ;
///$tab Airlines
[Carrier Groups]:
LOAD [%Carrier Group ID], 
     [Carrier Group]
FROM
[$(vFolderSourceData)QVDs\Carrier Groups.qvd]
(qvd);

[Airlines]:
LOAD [%Airline ID], 
     Airline
FROM
[$(vFolderSourceData)QVDs\Airlines.qvd]
(qvd);

[Carrier Operating Region]:
LOAD [%Region Code], 
     [Carrier's Operating Region]
FROM
[$(vFolderSourceData)QVDs\Carrier Operating Region.qvd]
(qvd);

[Flight Types]:
LOAD [%Datasource ID], 
     [Flight Type]
FROM
[$(vFolderSourceData)QVDs\Flight Types.qvd]
(qvd);





///$tab Airports
[Distance Groups]:
LOAD [%Distance Group ID], 
     [Distance Interval]
FROM
[$(vFolderSourceData)QVDs\Distance Groups.qvd]
(qvd);

ODBC CONNECT32 TO [MS Access Database;DBQ=D:\QlikView Development\Airline Operations\Data Files\MDBs\Dimension Tables.mdb];

LOAD `%Destination Airport ID`,
    `Destination Airport`;
SQL SELECT `%Destination Airport ID`,
    `Destination Airport`
FROM `Destination Airports`;

LOAD `%Origin Airport ID`,
    `Origin Airport`;
SQL SELECT `%Origin Airport ID`,
    `Origin Airport`
FROM `Origin Airports`;

Directory;
LOAD [%Origin Airport Market ID], 
     [Origin Market]
FROM
[$(vFolderSourceData)CSVs\Origin Markets.csv]
(txt, codepage is 1252, embedded labels, delimiter is '\t', msq);

//LOAD `%Aircraft Group ID`,
//    `Aircraft Group`;
//SQL SELECT `%Aircraft Group ID`,
//    `Aircraft Group`
//FROM `Aircraft Groups`;

Directory;
LOAD [%Destination Airport Market ID], 
     [Destination Market]
FROM
[$(vFolderSourceData)CSVs\Destination Markets.csv]
(txt, codepage is 1252, embedded labels, delimiter is '\t', msq);





///$tab Metrics
LOAD * INLINE [
    Metric Name, eMetric
    # of Flights, eDeparturePerformed
    Enplaned Passengers, eEnpanneledPassengers
    Air Time, eAirTime
];

